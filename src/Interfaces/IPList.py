#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.23
#  in conjunction with Tcl version 8.6
#    May 23, 2019 12:56:01 PM SAST  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

try:
    from tkinter import messagebox
except:
    # Python 2
    import tkMessageBox as messagebox

import IPList_support
import Home_support
import Login_support
import os.path

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    root = tk.Tk()
    top = win_IPList (root)
    IPList_support.init(root, top)
    root.mainloop()

w = None
def create_win_IPList(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    rt = root
    w = tk.Toplevel (root)
    top = win_IPList (w)
    IPList_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_win_IPList():
    global w
    w.destroy()
    w = None

class win_IPList:

    def back(self):
        destroy_win_IPList()
        Home_support.root.deiconify()

    def logout(self):
        msg = messagebox.askyesno("Logout", "Are you sure?");
        if (msg):
            destroy_win_IPList()
            Login_support.root.deiconify()

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("229x30+447+144")
        top.title("List IP's")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.018, rely=0.022, height=151, width=349)
        photo_location = os.path.join(prog_location,"Images/Defendr.png")
        self._img0 = tk.PhotoImage(file=photo_location)
        self.Label1.configure(image=self._img0)
        self.Label1.configure(width=349)

        self.btnLogout = tk.Button(top)
        self.btnLogout.place(relx=0.857, rely=0.022, height=31, width=72)
        self.btnLogout.configure(text='''Logout''')
        self.btnLogout.configure(command=lambda: self.logout())

        self.btnBack = tk.Button(top)
        self.btnBack.place(relx=0.018, rely=0.913, height=31, width=60)
        self.btnBack.configure(text='''Back''')
        self.btnBack.configure(command=lambda: self.back())

        self.lst_IPs = tk.Listbox(top)
        self.lst_IPs.place(relx=0.661, rely=0.356, relheight=0.503
                , relwidth=0.329)
        self.lst_IPs.configure(background="white")
        self.lst_IPs.configure(font="TkFixedFont")
        self.lst_IPs.configure(selectmode='single')
        self.lst_IPs.configure(setgrid="1")
        self.lst_IPs.configure(width=184)

        self.txtIp = tk.Entry(top)
        self.txtIp.place(relx=0.036, rely=0.379,height=33, relwidth=0.296)
        self.txtIp.configure(background="white")
        self.txtIp.configure(exportselection="0")
        self.txtIp.configure(font="TkFixedFont")
        self.txtIp.configure(width=166)

        self.btnAdd = tk.Button(top)
        self.btnAdd.place(relx=0.357, rely=0.379, height=31, width=69)
        self.btnAdd.configure(text='''Add IP''')

        self.btnRemove = tk.Button(top)
        self.btnRemove.place(relx=0.821, rely=0.913, height=31, width=91)
        self.btnRemove.configure(text='''Remove IP''')
        self.btnRemove.configure(width=91)

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.018, rely=0.512, height=151, width=349)
        photo_location = os.path.join(prog_location,"Images/blacklist.png")
        self._img1 = tk.PhotoImage(file=photo_location)
        self.Label2.configure(image=self._img1)
        self.Label2.configure(width=349)

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

if __name__ == '__main__':
    vp_start_gui()





